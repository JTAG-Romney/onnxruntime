parameters:
- name: RunOnnxRuntimeTests
  displayName: Run Tests?
  type: boolean
  default: true

- name: IsMacOS
  type: boolean
  default: true
  
- name: DoCompliance
  displayName: Run Compliance Tasks?
  type: boolean
  default: true

- name: PublishingNuget
  displayName: Publishing Nuget Packages and report binary size to mysql
  type: boolean
  default: true

- name: DoEsrp
  displayName: Run code sign tasks? Must be true if you are doing an Onnx Runtime release.
  type: boolean
  default: false

- name: IsReleaseBuild
  displayName: Is a release build? Set it to true if you are doing an Onnx Runtime release.
  type: boolean
  default: false

- name: AdditionalBuildFlags
  displayName: Additional build flags for build.py
  type: string
  default: ''

- name: AdditionalWinBuildFlags
  displayName: Additional build flags that just for Windows Builds
  type: string
  default: ''

- name: OrtNugetPackageId
  displayName: Package name for nuget
  type: string
  default: 'Microsoft.ML.OnnxRuntime'

- name: BuildVariant
  type: string
  default: 'openmp'

jobs:
- job: NuGet_Test_MacOS
  workspace:
    clean: all
  pool:
    vmImage: 'macOS-10.14'
  condition: succeeded()
  variables:
  - group: ORT_TEST_DATA_SAS
  - name: OnnxRuntimeBuildDirectory
    value: '$(Build.BinariesDirectory)'
  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Pipeline Artifact - Signed NuGet'
    inputs:
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 688
      buildVersionToDownload: specific
      pipelineId: 143846
      artifactName: 'drop-signed-nuget'
      targetPath: '$(Build.BinariesDirectory)/nuget-artifact'

  - task: DownloadPipelineArtifact@2
    displayName: 'Download OsX CustomOp test data'
    inputs:
      buildType: specific
      project: '530acbc4-21bc-487d-8cd8-348ff451d2ff'
      definition: 688
      buildVersionToDownload: specific
      pipelineId: 143846
      artifactName: 'drop-osx'
      targetPath: '$(Build.BinariesDirectory)/testdata'

  - template: ../nuget/templates/get-nuget-package-version-as-variable.yml
    parameters:
      packageFolder: '$(Build.BinariesDirectory)/nuget-artifact'

  - script: |
     brew install libomp
     $(Build.SourcesDirectory)/csharp/test/Microsoft.ML.OnnxRuntime.EndToEndTests/runtest.sh \
               $(Build.BinariesDirectory)/nuget-artifact \
               $(Build.SourcesDirectory) \
               $(Build.BinariesDirectory) \
               $(NuGetPackageVersionNumber) \
               ${{ parameters.IsMacOS }}

     if [ $? -ne 0 ]; then
         echo "Failed to run test"
         exit 1
     fi
    displayName: 'Run Test'
    env:
        OnnxRuntimeBuildDirectory: $(Build.BinariesDirectory)
        DisableContribOps: $(DisableContribOps)
        DisableMlOps: $(DisableMlOps)
        IsReleaseBuild: $(IsReleaseBuild)

  - template: component-governance-component-detection-steps.yml
    parameters :
      condition : 'always'

  - template: clean-agent-build-directory-step.yml
